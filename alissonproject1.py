# -*- coding: utf-8 -*-
"""AlissonProject1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fqMveO9tGn-LAAaB-YHbdN2N6yGhcRvX
"""

#Import Libraries
import streamlit as st
import pandas as pd
import altair as alt
import plotly.express as px
import matplotlib.pyplot as plt
import seaborn as sns

df_reshaped = pd.read_csv('netflix_titles.csv')

#Page Configuration
st.set_page_config(
    page_title="US Population Dashboard",
    page_icon="ðŸŽ¬", # Clapperboard emoji
    layout="wide",
    initial_sidebar_state="expanded")

alt.themes.enable("dark")

#Add a sidebar for the selection of differents graphs
with st.sidebar:
    st.title('ðŸŽ¬ Netflix Data Visualization')

    graph_options = [
        "Release Year Distribution",
        "Distribution of Content Types",
        "Top 13 Countries with Most Content",
        "Trend of Releases Over Time",
        "Type vs Rating",
        "Filter Only Movies",
        "Pairplot",
        "Multivariate Analysis"
    ]
    selected_graph = st.selectbox('Select a Graph', graph_options)

# Release Year Distribution
# Both movies and TV shows increased after 2010, peaking around 2018-2019.
def release_year_distribution(df): # Corrected: accepts df as argument
    plt.figure(figsize=(10,6))
    sns.distplot(df['release_year'], color='r') # Use passed df
    plt.title('Distribution of Release Years', size=18)
    plt.xlabel('Release Year', size=14)
    plt.ylabel('Density', size=14)
    plt.show()

# Distribution of content types
# movies are dominated with more than 6000
def content_type_distribution():
    plt.figure(figsize=(10,6))
    sns.countplot(data=df, x='type', palette=['skyblue', 'orange'])
    plt.title('Count of Movies vs TV Shows on Netflix')
    plt.show()

# Top 13 countries with most content
# we can notice that United States and India dominate both categories

def top_13_countries():
    top_countries = df['country'].value_counts().head(13)
    colors = ['skyblue', 'orange', 'green', 'red', 'purple', 'brown', 'pink', 'gray', 'olive', 'cyan', 'magenta', 'gold', 'lime']
    top_countries.plot(kind='bar', title='Top 13 Content Producing Countries', color=colors)
    plt.ylabel('Number of Titles')
    plt.show()

# Trend of releases over time
# Around 2018 and 2019 are the years with the mist numbers of titles released over the period
def trend_of_releases():
    df['release_year'].value_counts().sort_index().plot(kind='line', figsize=(12,5), title='Number of Titles Released per Year')
    plt.xlabel('Year')
    plt.ylabel('Number of Titles')
    plt.show()

# Type vs Rating
# we can notice that Movies are dominate in almost all catgories
#TV-MA is the most common rating overall, especially for TV Shows.
def type_vs_rating():
    plt.figure(figsize=(12,6))
    sns.countplot(data=df, x='rating', hue='type', order=df['rating'].value_counts().index)
    plt.title('Distribution of Ratings by Content Type')
    plt.xticks(rotation=45)
    plt.legend(title='Type')
    plt.show()

# Filter only Movies
#Most Netflix movies are 90â€“110 minutes long
def filter_only_movies():
    movies_df = df[df['type'] == 'Movie'].copy()
    movies_df['duration_minutes'] = movies_df['duration'].str.extract('(\d+)').astype(float)

    plt.figure(figsize=(10,6))
    sns.histplot(data=movies_df, x='duration_minutes', bins=30, kde=True)
    plt.title('Distribution of Movie Durations (in minutes)')
    plt.xlabel('Duration (minutes)')
    plt.show()

# Pairplot
# Extract duration in minutes (only works for movies)
def pairplot():
    df['duration_minutes'] = df['duration'].str.extract('(\d+)').astype(float)
    df['type_encoded'] = df['type'].map({'Movie': 0, 'TV Show': 1})
    netflix_pairplot_df = df.dropna(subset=['release_year', 'duration_minutes', 'type_encoded'])

    sns.pairplot(
        netflix_pairplot_df[['release_year', 'duration_minutes', 'type_encoded']],
        markers="+",
        diag_kind="kde",
        kind='reg',
        plot_kws={
            'line_kws': {'color': '#aec6cf'},
            'scatter_kws': {'alpha': 0.7, 'color': 'red'}
        },
        corner=True
    )
    plt.suptitle('Netflix Titles Pairplot: Release Year, Duration, and Type (Encoded)', y=1.02)
    plt.show()

# Multivariate Analysis
# release_year vs duration_minutes: Typically weak or no correlation expected.
# type_encoded vs duration_minutes: May show a negative correlation, since TV Shows don't usually have a numerical duration in minutes
# Ensure duration_minutes and type_encoded exist
def multivariate_analysis():
    df['duration_minutes'] = df['duration'].str.extract('(\d+)').astype(float)
    df['type_encoded'] = df['type'].map({'Movie': 0, 'TV Show': 1})
    numerical_df = df[['release_year', 'duration_minutes', 'type_encoded']].dropna()

    plt.figure(figsize=(10,6))
    sns.heatmap(numerical_df.corr(), annot=True, square=True, cmap='RdBu', vmin=-1, vmax=1)
    plt.title('Correlations Between Netflix Variables', size=18)
    plt.xticks(size=13)
    plt.yticks(size=13)
    plt.show()

# Mostrar el grÃ¡fico segÃºn la selecciÃ³n del usuario
if selected_graph == "Release Year Distribution":
    release_year_distribution(df_reshaped)
elif selected_graph == "Distribution of Content Types":
    content_type_distribution()
elif selected_graph == "Top 13 Countries with Most Content":
    top_13_countries()
elif selected_graph == "Trend of Releases Over Time":
    trend_of_releases()
elif selected_graph == "Type vs Rating":
    type_vs_rating()
elif selected_graph == "Filter Only Movies":
    filter_only_movies()
elif selected_graph == "Pairplot":
    pairplot()
elif selected_graph == "Multivariate Analysis":
    multivariate_analysis()